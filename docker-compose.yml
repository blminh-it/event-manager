services:
  postgres:
    container_name: 'event-db'
    hostname: 'event-db' 
    restart: 'unless-stopped'
    image: 'postgres:16-alpine'
    environment:
      - 'POSTGRES_USER=admin'
      - 'PGUSER=admin'
      - 'POSTGRES_PASSWORD=123456'
      - 'PGDATA=/data/postgres'
    volumes:
      - './data/postgres/postgres_init.sql:/docker-entrypoint-initdb.d/init.sql'
    ports:
      - '5432:5432'
    networks:
      - 'event_ticket_network'

  backend:
    container_name: 'event-backend'
    hostname: 'event-backend'
    restart: 'unless-stopped'
    image: 'node:24-alpine3.21'
    working_dir: '/home/node/app'
    command: ["npm", "run", "start:dev"]
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file:
      - './backend/.env'
    volumes:
      - './backend:/home/node/app'
    ports:
      - '3000:3000'
    networks:
      - 'event_ticket_network'
    depends_on:
      - postgres

  frontend:
    container_name: 'event-frontend'
    hostname: 'event-frontend'
    restart: 'unless-stopped'
    build:
      context: ./frontend
      dockerfile: docker/Dockerfile
    volumes:
      - './frontend:/home/node/app'
      - /home/node/app/node_modules
    ports:
      - '5173:5173'
    networks:
      - 'event_ticket_network'

networks:
  event_ticket_network:
    name: 'event_ticket_network'
